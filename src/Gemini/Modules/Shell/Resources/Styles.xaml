<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:cal="http://www.caliburnproject.org"
					xmlns:controls="clr-namespace:Gemini.Framework.Controls"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">
	<Style x:Key="MenuItem" TargetType="{x:Type controls:MenuItem}">
		<Setter Property="Icon" Value="{Binding Icon}" />
		<Setter Property="InputGestureText" Value="{Binding InputGestureText}" />
		<Setter Property="cal:Action.Target" Value="{Binding}" />
		<Setter Property="cal:Message.Attach" Value="{Binding ActionText}" />
	</Style>

	<Style x:Key="CheckableMenuItem" TargetType="{x:Type controls:MenuItem}" BasedOn="{StaticResource MenuItem}">
		<Setter Property="IsCheckable" Value="True" />
		<Setter Property="IsChecked" Value="{Binding IsChecked}" />
	</Style>

	<HierarchicalDataTemplate x:Key="menuTemplate" ItemsSource="{Binding Children}">
		<ContentPresenter Content="{Binding Path=Text}" RecognizesAccessKey="True" />
	</HierarchicalDataTemplate>

	<Image x:Key="ToolBarButtonImage" x:Shared="false" Source="{Binding Icon}">
		<Image.Style>
			<Style TargetType="Image">
				<Setter Property="Width" Value="16" />
				<Setter Property="Height" Value="16" />
				<Setter Property="Stretch" Value="Fill" />
				<Style.Triggers>
					<Trigger Property="IsEnabled" Value="False">
						<Setter Property="Opacity" Value="0.5" />
					</Trigger>
				</Style.Triggers>
			</Style>
		</Image.Style>
	</Image>

	<Style x:Key="ToolBarToggleButton" TargetType="{x:Type ToggleButton}" 
		   BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}">
		<Setter Property="Content" Value="{StaticResource ToolBarButtonImage}" />
		<Setter Property="ToolTip" Value="{Binding InputGestureText}" />
		<Setter Property="IsChecked" Value="{Binding IsChecked}" />
		<Setter Property="cal:Action.Target" Value="{Binding}" />
		<Setter Property="cal:Message.Attach" Value="{Binding ActionText}" />
	</Style>

	<Style x:Key="ToolBarButton" TargetType="{x:Type Button}" 
		   BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
		<Setter Property="Content" Value="{StaticResource ToolBarButtonImage}" />
		<Setter Property="ToolTip" Value="{Binding InputGestureText}" />
		<Setter Property="cal:Action.Target" Value="{Binding}" />
		<Setter Property="cal:Message.Attach" Value="{Binding ActionText}" />
	</Style>

	<xctk:InverseBoolConverter x:Key="InverseBoolConverter" />
	
	<Style x:Key="ToolBarSplitButton" TargetType="xctk:SplitButton">
		<Setter Property="Content" Value="{StaticResource ToolBarButtonImage}" />
		<Setter Property="DropDownContent" Value="{Binding DropDownContent}" />
		<Setter Property="ToolTip" Value="{Binding InputGestureText}" />
		<Setter Property="cal:Action.Target" Value="{Binding}" />
		<Setter Property="cal:Message.Attach" Value="[Event Click] = [Action Execute]" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type xctk:SplitButton}">
					<Grid x:Name="MainGrid" SnapsToDevicePixels="True">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<Button x:Name="PART_ActionButton" Margin="0" 
									HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
									VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
									Padding="{TemplateBinding Padding}"
									Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
									Content="{TemplateBinding Content}" />
							<ToggleButton x:Name="PART_ToggleButton" Grid.Column="1" IsTabStop="False"
										  IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
										  IsHitTestVisible="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}"
										  Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
										  Width="12">
								<Grid>
									<Grid x:Name="arrowGlyph" IsHitTestVisible="False">
										<Path x:Name="Arrow" Width="7" Height="4" Data="M 0,1 C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1 z" Fill="#FF000000" />
									</Grid>
								</Grid>
							</ToggleButton>
						</Grid>

						<Popup x:Name="PART_Popup" 
							   HorizontalOffset="1" VerticalOffset="1"
							   AllowsTransparency="True" StaysOpen="False"
							   Placement="Bottom" Focusable="False"
							   IsOpen="{Binding IsChecked, ElementName=PART_ToggleButton}">
							<Border BorderThickness="1">
								
								<ContentPresenter x:Name="PART_ContentPresenter">
									<ContentPresenter.Content>
										<ContentControl cal:View.Model="{TemplateBinding DropDownContent}"
													IsTabStop="False" />
									</ContentPresenter.Content>
								</ContentPresenter>
							</Border>
						</Popup>

					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Fill" TargetName="Arrow" Value="#AFAFAF" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<!--<Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackgroundBrush}" />
							<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource SolidBorderBrush}" />-->
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>